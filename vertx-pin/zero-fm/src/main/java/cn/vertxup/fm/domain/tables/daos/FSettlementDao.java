/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.daos;


import cn.vertxup.fm.domain.tables.FSettlement;
import cn.vertxup.fm.domain.tables.records.FSettlementRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FSettlementDao extends DAOImpl<FSettlementRecord, cn.vertxup.fm.domain.tables.pojos.FSettlement, String> implements VertxDAO<cn.vertxup.fm.domain.tables.records.FSettlementRecord,cn.vertxup.fm.domain.tables.pojos.FSettlement,java.lang.String> {

    /**
     * Create a new FSettlementDao without any configuration
     */
    public FSettlementDao() {
        super(FSettlement.F_SETTLEMENT, cn.vertxup.fm.domain.tables.pojos.FSettlement.class);
    }

    /**
     * Create a new FSettlementDao with an attached configuration
     */
    public FSettlementDao(Configuration configuration) {
        super(FSettlement.F_SETTLEMENT, cn.vertxup.fm.domain.tables.pojos.FSettlement.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.fm.domain.tables.pojos.FSettlement object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByKey(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.fm.domain.tables.pojos.FSettlement fetchOneByKey(String value) {
        return fetchOne(FSettlement.F_SETTLEMENT.KEY, value);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByCode(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.CODE, values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchBySerial(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.SERIAL, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByAmount(BigDecimal... values) {
        return fetch(FSettlement.F_SETTLEMENT.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByComment(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.COMMENT, values);
    }

    /**
     * Fetch records that have <code>ROUNDED IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByRounded(Boolean... values) {
        return fetch(FSettlement.F_SETTLEMENT.ROUNDED, values);
    }

    /**
     * Fetch records that have <code>FINISHED IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByFinished(Boolean... values) {
        return fetch(FSettlement.F_SETTLEMENT.FINISHED, values);
    }

    /**
     * Fetch records that have <code>FINISHED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(FSettlement.F_SETTLEMENT.FINISHED_AT, values);
    }

    /**
     * Fetch records that have <code>SIGN_NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchBySignName(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.SIGN_NAME, values);
    }

    /**
     * Fetch records that have <code>SIGN_MOBILE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchBySignMobile(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.SIGN_MOBILE, values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByOrderId(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchBySigma(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByLanguage(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByActive(Boolean... values) {
        return fetch(FSettlement.F_SETTLEMENT.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByMetadata(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FSettlement.F_SETTLEMENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByCreatedBy(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FSettlement.F_SETTLEMENT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchByUpdatedBy(String... values) {
        return fetch(FSettlement.F_SETTLEMENT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.fm.domain.tables.pojos.FSettlement> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.CODE,values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.SERIAL,values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByAmountAsync(List<BigDecimal> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.AMOUNT,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.COMMENT,values);
    }

    /**
     * Fetch records that have <code>ROUNDED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByRoundedAsync(List<Boolean> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.ROUNDED,values);
    }

    /**
     * Fetch records that have <code>FINISHED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByFinishedAsync(List<Boolean> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.FINISHED,values);
    }

    /**
     * Fetch records that have <code>FINISHED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByFinishedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.FINISHED_AT,values);
    }

    /**
     * Fetch records that have <code>SIGN_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchBySignNameAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.SIGN_NAME,values);
    }

    /**
     * Fetch records that have <code>SIGN_MOBILE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchBySignMobileAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.SIGN_MOBILE,values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByOrderIdAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSettlement>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(FSettlement.F_SETTLEMENT.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
