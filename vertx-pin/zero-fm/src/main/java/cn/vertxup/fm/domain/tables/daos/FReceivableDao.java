/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.daos;


import cn.vertxup.fm.domain.tables.FReceivable;
import cn.vertxup.fm.domain.tables.records.FReceivableRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FReceivableDao extends DAOImpl<FReceivableRecord, cn.vertxup.fm.domain.tables.pojos.FReceivable, String> implements VertxDAO<cn.vertxup.fm.domain.tables.records.FReceivableRecord,cn.vertxup.fm.domain.tables.pojos.FReceivable,java.lang.String> {

    /**
     * Create a new FReceivableDao without any configuration
     */
    public FReceivableDao() {
        super(FReceivable.F_RECEIVABLE, cn.vertxup.fm.domain.tables.pojos.FReceivable.class);
    }

    /**
     * Create a new FReceivableDao with an attached configuration
     */
    public FReceivableDao(Configuration configuration) {
        super(FReceivable.F_RECEIVABLE, cn.vertxup.fm.domain.tables.pojos.FReceivable.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.fm.domain.tables.pojos.FReceivable object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByKey(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.fm.domain.tables.pojos.FReceivable fetchOneByKey(String value) {
        return fetchOne(FReceivable.F_RECEIVABLE.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByName(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByCode(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.CODE, values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchBySerial(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.SERIAL, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByAmount(BigDecimal... values) {
        return fetch(FReceivable.F_RECEIVABLE.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByComment(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.COMMENT, values);
    }

    /**
     * Fetch records that have <code>SIGN_NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchBySignName(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.SIGN_NAME, values);
    }

    /**
     * Fetch records that have <code>SIGN_MOBILE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchBySignMobile(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.SIGN_MOBILE, values);
    }

    /**
     * Fetch records that have <code>FINISHED IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByFinished(Boolean... values) {
        return fetch(FReceivable.F_RECEIVABLE.FINISHED, values);
    }

    /**
     * Fetch records that have <code>FINISHED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(FReceivable.F_RECEIVABLE.FINISHED_AT, values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByCustomerId(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchBySigma(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByLanguage(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByActive(Boolean... values) {
        return fetch(FReceivable.F_RECEIVABLE.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByMetadata(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FReceivable.F_RECEIVABLE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByCreatedBy(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FReceivable.F_RECEIVABLE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchByUpdatedBy(String... values) {
        return fetch(FReceivable.F_RECEIVABLE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.fm.domain.tables.pojos.FReceivable> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByNameAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.CODE,values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.SERIAL,values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByAmountAsync(List<BigDecimal> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.AMOUNT,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.COMMENT,values);
    }

    /**
     * Fetch records that have <code>SIGN_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchBySignNameAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.SIGN_NAME,values);
    }

    /**
     * Fetch records that have <code>SIGN_MOBILE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchBySignMobileAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.SIGN_MOBILE,values);
    }

    /**
     * Fetch records that have <code>FINISHED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByFinishedAsync(List<Boolean> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.FINISHED,values);
    }

    /**
     * Fetch records that have <code>FINISHED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByFinishedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.FINISHED_AT,values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByCustomerIdAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.CUSTOMER_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FReceivable>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(FReceivable.F_RECEIVABLE.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
