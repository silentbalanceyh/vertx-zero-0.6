/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.fm.domain.tables;


import cn.vertxup.fm.domain.Db;
import cn.vertxup.fm.domain.Indexes;
import cn.vertxup.fm.domain.Keys;
import cn.vertxup.fm.domain.tables.records.FInvoiceRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FInvoice extends TableImpl<FInvoiceRecord> {

    /**
     * The reference instance of <code>DB_ETERNAL.F_INVOICE</code>
     */
    public static final FInvoice F_INVOICE = new FInvoice();
    private static final long serialVersionUID = -1613146022;
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.KEY</code>. 「key」- 发票主键
     */
    public final TableField<FInvoiceRecord, String> KEY = createField("KEY", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「key」- 发票主键");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.NAME</code>. 「name」- 发票名称
     */
    public final TableField<FInvoiceRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "「name」- 发票名称");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.CODE</code>. 「code」- 发票机器码
     */
    public final TableField<FInvoiceRecord, String> CODE = createField("CODE", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "「code」- 发票机器码");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.TYPE</code>. 「type」- 发票类型
     */
    public final TableField<FInvoiceRecord, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「type」- 发票类型");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.AMOUNT</code>. 「amount」- 发票金额
     */
    public final TableField<FInvoiceRecord, BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DECIMAL(18, 2).nullable(false), this, "「amount」- 发票金额");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.COMMENT</code>. 「comment」 - 发票备注
     */
    public final TableField<FInvoiceRecord, String> COMMENT = createField("COMMENT", org.jooq.impl.SQLDataType.CLOB, this, "「comment」 - 发票备注");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.INVOICE_TITLE</code>. 「invoiceTitle」- 发票抬头
     */
    public final TableField<FInvoiceRecord, String> INVOICE_TITLE = createField("INVOICE_TITLE", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "「invoiceTitle」- 发票抬头");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.INVOICE_NUMBER</code>. 「invoiceNumber」- 发票代码
     */
    public final TableField<FInvoiceRecord, String> INVOICE_NUMBER = createField("INVOICE_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "「invoiceNumber」- 发票代码");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.INVOICE_SERIAL</code>. 「invoiceSerial」- 发票号码
     */
    public final TableField<FInvoiceRecord, String> INVOICE_SERIAL = createField("INVOICE_SERIAL", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "「invoiceSerial」- 发票号码");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.TIN</code>. 「tin」- 税号：纳税人识别号
     */
    public final TableField<FInvoiceRecord, String> TIN = createField("TIN", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「tin」- 税号：纳税人识别号");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.TIN_NAME</code>. 「tinName」- 纳税人姓名
     */
    public final TableField<FInvoiceRecord, String> TIN_NAME = createField("TIN_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "「tinName」- 纳税人姓名");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.PERSONAL</code>. 「personal」- 是否个人发票
     */
    public final TableField<FInvoiceRecord, Boolean> PERSONAL = createField("PERSONAL", org.jooq.impl.SQLDataType.BIT, this, "「personal」- 是否个人发票");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.DESC_BANK</code>. 「descBank」- 开户行信息
     */
    public final TableField<FInvoiceRecord, String> DESC_BANK = createField("DESC_BANK", org.jooq.impl.SQLDataType.CLOB, this, "「descBank」- 开户行信息");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.DESC_COMPANY</code>. 「descCompany」- 公司信息
     */
    public final TableField<FInvoiceRecord, String> DESC_COMPANY = createField("DESC_COMPANY", org.jooq.impl.SQLDataType.CLOB, this, "「descCompany」- 公司信息");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.DESC_LOCATION</code>. 「descLocation」- 地址电话
     */
    public final TableField<FInvoiceRecord, String> DESC_LOCATION = createField("DESC_LOCATION", org.jooq.impl.SQLDataType.CLOB, this, "「descLocation」- 地址电话");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.DESC_USER</code>. 「descUser」- 个人发票用户信息
     */
    public final TableField<FInvoiceRecord, String> DESC_USER = createField("DESC_USER", org.jooq.impl.SQLDataType.CLOB, this, "「descUser」- 个人发票用户信息");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.NAME_RECEIPT</code>. 「nameReceipt」收款人
     */
    public final TableField<FInvoiceRecord, String> NAME_RECEIPT = createField("NAME_RECEIPT", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「nameReceipt」收款人");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.NAME_RECHECK</code>. 「nameRecheck」复核人
     */
    public final TableField<FInvoiceRecord, String> NAME_RECHECK = createField("NAME_RECHECK", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「nameRecheck」复核人");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.NAME_BILLING</code>. 「nameBilling」开票人
     */
    public final TableField<FInvoiceRecord, String> NAME_BILLING = createField("NAME_BILLING", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「nameBilling」开票人");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.NAME_SELLING</code>. 「nameSelling」销售人
     */
    public final TableField<FInvoiceRecord, String> NAME_SELLING = createField("NAME_SELLING", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「nameSelling」销售人");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.ORDER_ID</code>. 「orderId」- 订单对应的订单ID
     */
    public final TableField<FInvoiceRecord, String> ORDER_ID = createField("ORDER_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「orderId」- 订单对应的订单ID");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.SETTLEMENT_ID</code>. 「settlementId」- 结算单ID，该字段有值标识已经结算
     */
    public final TableField<FInvoiceRecord, String> SETTLEMENT_ID = createField("SETTLEMENT_ID", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「settlementId」- 结算单ID，该字段有值标识已经结算");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.SIGMA</code>. 「sigma」- 统一标识
     */
    public final TableField<FInvoiceRecord, String> SIGMA = createField("SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "「sigma」- 统一标识");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.LANGUAGE</code>. 「language」- 使用的语言
     */
    public final TableField<FInvoiceRecord, String> LANGUAGE = createField("LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "「language」- 使用的语言");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.ACTIVE</code>. 「active」- 是否启用
     */
    public final TableField<FInvoiceRecord, Boolean> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.BIT, this, "「active」- 是否启用");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.METADATA</code>. 「metadata」- 附加配置数据
     */
    public final TableField<FInvoiceRecord, String> METADATA = createField("METADATA", org.jooq.impl.SQLDataType.CLOB, this, "「metadata」- 附加配置数据");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public final TableField<FInvoiceRecord, LocalDateTime> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「createdAt」- 创建时间");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public final TableField<FInvoiceRecord, String> CREATED_BY = createField("CREATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「createdBy」- 创建人");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public final TableField<FInvoiceRecord, LocalDateTime> UPDATED_AT = createField("UPDATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「updatedAt」- 更新时间");
    /**
     * The column <code>DB_ETERNAL.F_INVOICE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public final TableField<FInvoiceRecord, String> UPDATED_BY = createField("UPDATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「updatedBy」- 更新人");

    /**
     * Create a <code>DB_ETERNAL.F_INVOICE</code> table reference
     */
    public FInvoice() {
        this(DSL.name("F_INVOICE"), null);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.F_INVOICE</code> table reference
     */
    public FInvoice(String alias) {
        this(DSL.name(alias), F_INVOICE);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.F_INVOICE</code> table reference
     */
    public FInvoice(Name alias) {
        this(alias, F_INVOICE);
    }

    private FInvoice(Name alias, Table<FInvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private FInvoice(Name alias, Table<FInvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FInvoiceRecord> getRecordType() {
        return FInvoiceRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB_ETERNAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.F_INVOICE_CODE, Indexes.F_INVOICE_INVOICE_NUMBER, Indexes.F_INVOICE_INVOICE_SERIAL, Indexes.F_INVOICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FInvoiceRecord> getPrimaryKey() {
        return Keys.KEY_F_INVOICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FInvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<FInvoiceRecord>>asList(Keys.KEY_F_INVOICE_PRIMARY, Keys.KEY_F_INVOICE_CODE, Keys.KEY_F_INVOICE_INVOICE_NUMBER, Keys.KEY_F_INVOICE_INVOICE_SERIAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FInvoice as(String alias) {
        return new FInvoice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FInvoice as(Name alias) {
        return new FInvoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FInvoice rename(String name) {
        return new FInvoice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FInvoice rename(Name name) {
        return new FInvoice(name, null);
    }
}
