/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.daos;


import cn.vertxup.fm.domain.tables.FSubject;
import cn.vertxup.fm.domain.tables.records.FSubjectRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FSubjectDao extends DAOImpl<FSubjectRecord, cn.vertxup.fm.domain.tables.pojos.FSubject, String> implements VertxDAO<cn.vertxup.fm.domain.tables.records.FSubjectRecord,cn.vertxup.fm.domain.tables.pojos.FSubject,java.lang.String> {

    /**
     * Create a new FSubjectDao without any configuration
     */
    public FSubjectDao() {
        super(FSubject.F_SUBJECT, cn.vertxup.fm.domain.tables.pojos.FSubject.class);
    }

    /**
     * Create a new FSubjectDao with an attached configuration
     */
    public FSubjectDao(Configuration configuration) {
        super(FSubject.F_SUBJECT, cn.vertxup.fm.domain.tables.pojos.FSubject.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.fm.domain.tables.pojos.FSubject object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByKey(String... values) {
        return fetch(FSubject.F_SUBJECT.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.fm.domain.tables.pojos.FSubject fetchOneByKey(String value) {
        return fetchOne(FSubject.F_SUBJECT.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByName(String... values) {
        return fetch(FSubject.F_SUBJECT.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByCode(String... values) {
        return fetch(FSubject.F_SUBJECT.CODE, values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchBySerial(String... values) {
        return fetch(FSubject.F_SUBJECT.SERIAL, values);
    }

    /**
     * Fetch records that have <code>CATEGORY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByCategory(String... values) {
        return fetch(FSubject.F_SUBJECT.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>HELP_CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByHelpCode(String... values) {
        return fetch(FSubject.F_SUBJECT.HELP_CODE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByComment(String... values) {
        return fetch(FSubject.F_SUBJECT.COMMENT, values);
    }

    /**
     * Fetch records that have <code>OWNER IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByOwner(String... values) {
        return fetch(FSubject.F_SUBJECT.OWNER, values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByCompanyId(String... values) {
        return fetch(FSubject.F_SUBJECT.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>PARENT_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByParentId(String... values) {
        return fetch(FSubject.F_SUBJECT.PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchBySigma(String... values) {
        return fetch(FSubject.F_SUBJECT.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByLanguage(String... values) {
        return fetch(FSubject.F_SUBJECT.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByActive(Boolean... values) {
        return fetch(FSubject.F_SUBJECT.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByMetadata(String... values) {
        return fetch(FSubject.F_SUBJECT.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FSubject.F_SUBJECT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByCreatedBy(String... values) {
        return fetch(FSubject.F_SUBJECT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FSubject.F_SUBJECT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchByUpdatedBy(String... values) {
        return fetch(FSubject.F_SUBJECT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.fm.domain.tables.pojos.FSubject> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByNameAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.CODE,values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.SERIAL,values);
    }

    /**
     * Fetch records that have <code>CATEGORY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCategoryAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.CATEGORY,values);
    }

    /**
     * Fetch records that have <code>HELP_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByHelpCodeAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.HELP_CODE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.COMMENT,values);
    }

    /**
     * Fetch records that have <code>OWNER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByOwnerAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.OWNER,values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCompanyIdAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByParentIdAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.PARENT_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(FSubject.F_SUBJECT.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FSubject.F_SUBJECT.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FSubject.F_SUBJECT.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FSubject>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(FSubject.F_SUBJECT.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
