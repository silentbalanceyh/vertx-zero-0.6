/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.daos;


import cn.vertxup.fm.domain.tables.FInvoice;
import cn.vertxup.fm.domain.tables.records.FInvoiceRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FInvoiceDao extends DAOImpl<FInvoiceRecord, cn.vertxup.fm.domain.tables.pojos.FInvoice, String> implements VertxDAO<cn.vertxup.fm.domain.tables.records.FInvoiceRecord,cn.vertxup.fm.domain.tables.pojos.FInvoice,java.lang.String> {

    /**
     * Create a new FInvoiceDao without any configuration
     */
    public FInvoiceDao() {
        super(FInvoice.F_INVOICE, cn.vertxup.fm.domain.tables.pojos.FInvoice.class);
    }

    /**
     * Create a new FInvoiceDao with an attached configuration
     */
    public FInvoiceDao(Configuration configuration) {
        super(FInvoice.F_INVOICE, cn.vertxup.fm.domain.tables.pojos.FInvoice.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.fm.domain.tables.pojos.FInvoice object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByKey(String... values) {
        return fetch(FInvoice.F_INVOICE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.fm.domain.tables.pojos.FInvoice fetchOneByKey(String value) {
        return fetchOne(FInvoice.F_INVOICE.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByName(String... values) {
        return fetch(FInvoice.F_INVOICE.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByCode(String... values) {
        return fetch(FInvoice.F_INVOICE.CODE, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByType(String... values) {
        return fetch(FInvoice.F_INVOICE.TYPE, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByAmount(BigDecimal... values) {
        return fetch(FInvoice.F_INVOICE.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByComment(String... values) {
        return fetch(FInvoice.F_INVOICE.COMMENT, values);
    }

    /**
     * Fetch records that have <code>INVOICE_TITLE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByInvoiceTitle(String... values) {
        return fetch(FInvoice.F_INVOICE.INVOICE_TITLE, values);
    }

    /**
     * Fetch records that have <code>INVOICE_NUMBER IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByInvoiceNumber(String... values) {
        return fetch(FInvoice.F_INVOICE.INVOICE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>INVOICE_SERIAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByInvoiceSerial(String... values) {
        return fetch(FInvoice.F_INVOICE.INVOICE_SERIAL, values);
    }

    /**
     * Fetch records that have <code>TIN IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByTin(String... values) {
        return fetch(FInvoice.F_INVOICE.TIN, values);
    }

    /**
     * Fetch records that have <code>TIN_NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByTinName(String... values) {
        return fetch(FInvoice.F_INVOICE.TIN_NAME, values);
    }

    /**
     * Fetch records that have <code>PERSONAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByPersonal(Boolean... values) {
        return fetch(FInvoice.F_INVOICE.PERSONAL, values);
    }

    /**
     * Fetch records that have <code>DESC_BANK IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByDescBank(String... values) {
        return fetch(FInvoice.F_INVOICE.DESC_BANK, values);
    }

    /**
     * Fetch records that have <code>DESC_COMPANY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByDescCompany(String... values) {
        return fetch(FInvoice.F_INVOICE.DESC_COMPANY, values);
    }

    /**
     * Fetch records that have <code>DESC_LOCATION IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByDescLocation(String... values) {
        return fetch(FInvoice.F_INVOICE.DESC_LOCATION, values);
    }

    /**
     * Fetch records that have <code>DESC_USER IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByDescUser(String... values) {
        return fetch(FInvoice.F_INVOICE.DESC_USER, values);
    }

    /**
     * Fetch records that have <code>NAME_RECEIPT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByNameReceipt(String... values) {
        return fetch(FInvoice.F_INVOICE.NAME_RECEIPT, values);
    }

    /**
     * Fetch records that have <code>NAME_RECHECK IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByNameRecheck(String... values) {
        return fetch(FInvoice.F_INVOICE.NAME_RECHECK, values);
    }

    /**
     * Fetch records that have <code>NAME_BILLING IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByNameBilling(String... values) {
        return fetch(FInvoice.F_INVOICE.NAME_BILLING, values);
    }

    /**
     * Fetch records that have <code>NAME_SELLING IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByNameSelling(String... values) {
        return fetch(FInvoice.F_INVOICE.NAME_SELLING, values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByOrderId(String... values) {
        return fetch(FInvoice.F_INVOICE.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>SETTLEMENT_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchBySettlementId(String... values) {
        return fetch(FInvoice.F_INVOICE.SETTLEMENT_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchBySigma(String... values) {
        return fetch(FInvoice.F_INVOICE.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByLanguage(String... values) {
        return fetch(FInvoice.F_INVOICE.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByActive(Boolean... values) {
        return fetch(FInvoice.F_INVOICE.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByMetadata(String... values) {
        return fetch(FInvoice.F_INVOICE.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FInvoice.F_INVOICE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByCreatedBy(String... values) {
        return fetch(FInvoice.F_INVOICE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FInvoice.F_INVOICE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchByUpdatedBy(String... values) {
        return fetch(FInvoice.F_INVOICE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.fm.domain.tables.pojos.FInvoice> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByNameAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.CODE,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.TYPE,values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByAmountAsync(List<BigDecimal> values) {
        return fetchAsync(FInvoice.F_INVOICE.AMOUNT,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.COMMENT,values);
    }

    /**
     * Fetch records that have <code>INVOICE_TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByInvoiceTitleAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.INVOICE_TITLE,values);
    }

    /**
     * Fetch records that have <code>INVOICE_NUMBER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByInvoiceNumberAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.INVOICE_NUMBER,values);
    }

    /**
     * Fetch records that have <code>INVOICE_SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByInvoiceSerialAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.INVOICE_SERIAL,values);
    }

    /**
     * Fetch records that have <code>TIN IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByTinAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.TIN,values);
    }

    /**
     * Fetch records that have <code>TIN_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByTinNameAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.TIN_NAME,values);
    }

    /**
     * Fetch records that have <code>PERSONAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByPersonalAsync(List<Boolean> values) {
        return fetchAsync(FInvoice.F_INVOICE.PERSONAL,values);
    }

    /**
     * Fetch records that have <code>DESC_BANK IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByDescBankAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.DESC_BANK,values);
    }

    /**
     * Fetch records that have <code>DESC_COMPANY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByDescCompanyAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.DESC_COMPANY,values);
    }

    /**
     * Fetch records that have <code>DESC_LOCATION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByDescLocationAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.DESC_LOCATION,values);
    }

    /**
     * Fetch records that have <code>DESC_USER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByDescUserAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.DESC_USER,values);
    }

    /**
     * Fetch records that have <code>NAME_RECEIPT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByNameReceiptAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.NAME_RECEIPT,values);
    }

    /**
     * Fetch records that have <code>NAME_RECHECK IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByNameRecheckAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.NAME_RECHECK,values);
    }

    /**
     * Fetch records that have <code>NAME_BILLING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByNameBillingAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.NAME_BILLING,values);
    }

    /**
     * Fetch records that have <code>NAME_SELLING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByNameSellingAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.NAME_SELLING,values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByOrderIdAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>SETTLEMENT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchBySettlementIdAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.SETTLEMENT_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(FInvoice.F_INVOICE.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FInvoice.F_INVOICE.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FInvoice.F_INVOICE.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FInvoice>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(FInvoice.F_INVOICE.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
