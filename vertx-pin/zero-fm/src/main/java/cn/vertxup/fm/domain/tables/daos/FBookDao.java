/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.daos;


import cn.vertxup.fm.domain.tables.FBook;
import cn.vertxup.fm.domain.tables.records.FBookRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FBookDao extends DAOImpl<FBookRecord, cn.vertxup.fm.domain.tables.pojos.FBook, String> implements VertxDAO<cn.vertxup.fm.domain.tables.records.FBookRecord,cn.vertxup.fm.domain.tables.pojos.FBook,java.lang.String> {

    /**
     * Create a new FBookDao without any configuration
     */
    public FBookDao() {
        super(FBook.F_BOOK, cn.vertxup.fm.domain.tables.pojos.FBook.class);
    }

    /**
     * Create a new FBookDao with an attached configuration
     */
    public FBookDao(Configuration configuration) {
        super(FBook.F_BOOK, cn.vertxup.fm.domain.tables.pojos.FBook.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.fm.domain.tables.pojos.FBook object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByKey(String... values) {
        return fetch(FBook.F_BOOK.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.fm.domain.tables.pojos.FBook fetchOneByKey(String value) {
        return fetchOne(FBook.F_BOOK.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByName(String... values) {
        return fetch(FBook.F_BOOK.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByCode(String... values) {
        return fetch(FBook.F_BOOK.CODE, values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchBySerial(String... values) {
        return fetch(FBook.F_BOOK.SERIAL, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByType(String... values) {
        return fetch(FBook.F_BOOK.TYPE, values);
    }

    /**
     * Fetch records that have <code>MAJOR IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByMajor(Boolean... values) {
        return fetch(FBook.F_BOOK.MAJOR, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByAmount(BigDecimal... values) {
        return fetch(FBook.F_BOOK.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByComment(String... values) {
        return fetch(FBook.F_BOOK.COMMENT, values);
    }

    /**
     * Fetch records that have <code>CHECKED IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByChecked(Boolean... values) {
        return fetch(FBook.F_BOOK.CHECKED, values);
    }

    /**
     * Fetch records that have <code>CHECKED_DESC IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByCheckedDesc(String... values) {
        return fetch(FBook.F_BOOK.CHECKED_DESC, values);
    }

    /**
     * Fetch records that have <code>EXCEED IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByExceed(Boolean... values) {
        return fetch(FBook.F_BOOK.EXCEED, values);
    }

    /**
     * Fetch records that have <code>EXCEED_DESC IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByExceedDesc(String... values) {
        return fetch(FBook.F_BOOK.EXCEED_DESC, values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByPreAuthorizeId(String... values) {
        return fetch(FBook.F_BOOK.PRE_AUTHORIZE_ID, values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByPreAuthorize(Boolean... values) {
        return fetch(FBook.F_BOOK.PRE_AUTHORIZE, values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE_DESC IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByPreAuthorizeDesc(String... values) {
        return fetch(FBook.F_BOOK.PRE_AUTHORIZE_DESC, values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByModelId(String... values) {
        return fetch(FBook.F_BOOK.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByModelKey(String... values) {
        return fetch(FBook.F_BOOK.MODEL_KEY, values);
    }

    /**
     * Fetch records that have <code>PARENT_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByParentId(String... values) {
        return fetch(FBook.F_BOOK.PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByOrderId(String... values) {
        return fetch(FBook.F_BOOK.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchBySigma(String... values) {
        return fetch(FBook.F_BOOK.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByLanguage(String... values) {
        return fetch(FBook.F_BOOK.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByActive(Boolean... values) {
        return fetch(FBook.F_BOOK.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByMetadata(String... values) {
        return fetch(FBook.F_BOOK.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(FBook.F_BOOK.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByCreatedBy(String... values) {
        return fetch(FBook.F_BOOK.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(FBook.F_BOOK.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.fm.domain.tables.pojos.FBook> fetchByUpdatedBy(String... values) {
        return fetch(FBook.F_BOOK.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.fm.domain.tables.pojos.FBook> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByNameAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.CODE,values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.SERIAL,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.TYPE,values);
    }

    /**
     * Fetch records that have <code>MAJOR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByMajorAsync(List<Boolean> values) {
        return fetchAsync(FBook.F_BOOK.MAJOR,values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByAmountAsync(List<BigDecimal> values) {
        return fetchAsync(FBook.F_BOOK.AMOUNT,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.COMMENT,values);
    }

    /**
     * Fetch records that have <code>CHECKED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCheckedAsync(List<Boolean> values) {
        return fetchAsync(FBook.F_BOOK.CHECKED,values);
    }

    /**
     * Fetch records that have <code>CHECKED_DESC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCheckedDescAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.CHECKED_DESC,values);
    }

    /**
     * Fetch records that have <code>EXCEED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByExceedAsync(List<Boolean> values) {
        return fetchAsync(FBook.F_BOOK.EXCEED,values);
    }

    /**
     * Fetch records that have <code>EXCEED_DESC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByExceedDescAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.EXCEED_DESC,values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByPreAuthorizeIdAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.PRE_AUTHORIZE_ID,values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByPreAuthorizeAsync(List<Boolean> values) {
        return fetchAsync(FBook.F_BOOK.PRE_AUTHORIZE,values);
    }

    /**
     * Fetch records that have <code>PRE_AUTHORIZE_DESC IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByPreAuthorizeDescAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.PRE_AUTHORIZE_DESC,values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByModelIdAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.MODEL_ID,values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByModelKeyAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.MODEL_KEY,values);
    }

    /**
     * Fetch records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByParentIdAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.PARENT_ID,values);
    }

    /**
     * Fetch records that have <code>ORDER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByOrderIdAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.ORDER_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(FBook.F_BOOK.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FBook.F_BOOK.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(FBook.F_BOOK.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.fm.domain.tables.pojos.FBook>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(FBook.F_BOOK.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
