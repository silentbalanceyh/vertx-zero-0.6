/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.fm.domain.tables.records;


import cn.vertxup.fm.domain.tables.FPayTerm;
import cn.vertxup.fm.domain.tables.interfaces.IFPayTerm;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FPayTermRecord extends UpdatableRecordImpl<FPayTermRecord> implements Record19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IFPayTerm {

    private static final long serialVersionUID = 1094271768;

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.KEY</code>. 「key」- 账单项
     */
    @Override
    public FPayTermRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.KEY</code>. 「key」- 账单项
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.NAME</code>. 「name」- 账单项名称
     */
    @Override
    public FPayTermRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.NAME</code>. 「name」- 账单项名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.CODE</code>. 「code」- 账单项编号
     */
    @Override
    public FPayTermRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.CODE</code>. 「code」- 账单项编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.TYPE</code>. 「type」- 账单项类型：付款类/消费类
     */
    @Override
    public FPayTermRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.TYPE</code>. 「type」- 账单项类型：付款类/消费类
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.CATEGORY</code>. 「category」- 账单项类别
     */
    @Override
    public FPayTermRecord setCategory(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.CATEGORY</code>. 「category」- 账单项类别
     */
    @Override
    public String getCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public FPayTermRecord setHelpCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public String getHelpCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.LEAF</code>. 「leaf」- 是否明细
     */
    @Override
    public FPayTermRecord setLeaf(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.LEAF</code>. 「leaf」- 是否明细
     */
    @Override
    public Boolean getLeaf() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.COMMENT</code>. 「comment」 - 账单项备注
     */
    @Override
    public FPayTermRecord setComment(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.COMMENT</code>. 「comment」 - 账单项备注
     */
    @Override
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.PARENT_ID</code>. 「parentId」- 父账单项
     */
    @Override
    public FPayTermRecord setParentId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.PARENT_ID</code>. 「parentId」- 父账单项
     */
    @Override
    public String getParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.SUBJECT_ID</code>. 「subjectId」- 会计科目关联ID
     */
    @Override
    public FPayTermRecord setSubjectId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.SUBJECT_ID</code>. 「subjectId」- 会计科目关联ID
     */
    @Override
    public String getSubjectId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.LOCKED</code>. 「locked」- 是否锁定
     */
    @Override
    public FPayTermRecord setLocked(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.LOCKED</code>. 「locked」- 是否锁定
     */
    @Override
    public Boolean getLocked() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FPayTermRecord setSigma(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FPayTermRecord setLanguage(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FPayTermRecord setActive(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FPayTermRecord setMetadata(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FPayTermRecord setCreatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FPayTermRecord setCreatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FPayTermRecord setUpdatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.F_PAY_TERM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FPayTermRecord setUpdatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.F_PAY_TERM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return FPayTerm.F_PAY_TERM.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return FPayTerm.F_PAY_TERM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FPayTerm.F_PAY_TERM.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FPayTerm.F_PAY_TERM.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return FPayTerm.F_PAY_TERM.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return FPayTerm.F_PAY_TERM.HELP_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return FPayTerm.F_PAY_TERM.LEAF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return FPayTerm.F_PAY_TERM.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return FPayTerm.F_PAY_TERM.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return FPayTerm.F_PAY_TERM.SUBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return FPayTerm.F_PAY_TERM.LOCKED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return FPayTerm.F_PAY_TERM.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return FPayTerm.F_PAY_TERM.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field14() {
        return FPayTerm.F_PAY_TERM.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return FPayTerm.F_PAY_TERM.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field16() {
        return FPayTerm.F_PAY_TERM.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return FPayTerm.F_PAY_TERM.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return FPayTerm.F_PAY_TERM.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return FPayTerm.F_PAY_TERM.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getHelpCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getSubjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getLocked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component14() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component16() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getHelpCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getSubjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getLocked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value14() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value16() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value3(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value5(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value6(String value) {
        setHelpCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value7(Boolean value) {
        setLeaf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value8(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value9(String value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value10(String value) {
        setSubjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value11(Boolean value) {
        setLocked(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value12(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value13(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value14(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value15(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value16(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value17(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value18(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord value19(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FPayTermRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Boolean value7, String value8, String value9, String value10, Boolean value11, String value12, String value13, Boolean value14, String value15, LocalDateTime value16, String value17, LocalDateTime value18, String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IFPayTerm from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setCategory(from.getCategory());
        setHelpCode(from.getHelpCode());
        setLeaf(from.getLeaf());
        setComment(from.getComment());
        setParentId(from.getParentId());
        setSubjectId(from.getSubjectId());
        setLocked(from.getLocked());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IFPayTerm> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FPayTermRecord
     */
    public FPayTermRecord() {
        super(FPayTerm.F_PAY_TERM);
    }

    /**
     * Create a detached, initialised FPayTermRecord
     */
    public FPayTermRecord(String key, String name, String code, String type, String category, String helpCode, Boolean leaf, String comment, String parentId, String subjectId, Boolean locked, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(FPayTerm.F_PAY_TERM);

        set(0, key);
        set(1, name);
        set(2, code);
        set(3, type);
        set(4, category);
        set(5, helpCode);
        set(6, leaf);
        set(7, comment);
        set(8, parentId);
        set(9, subjectId);
        set(10, locked);
        set(11, sigma);
        set(12, language);
        set(13, active);
        set(14, metadata);
        set(15, createdAt);
        set(16, createdBy);
        set(17, updatedAt);
        set(18, updatedBy);
    }
}
