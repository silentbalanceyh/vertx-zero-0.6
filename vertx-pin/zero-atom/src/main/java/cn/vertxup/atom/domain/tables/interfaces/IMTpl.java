/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.atom.domain.tables.interfaces;


import javax.annotation.Generated;
import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public interface IMTpl extends Serializable {

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.KEY</code>. 「key」- 模板ID
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.KEY</code>. 「key」- 模板ID
     */
    public IMTpl setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.NAME</code>. 「name」- 模板名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.NAME</code>. 「name」- 模板名称
     */
    public IMTpl setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CODE</code>. 「code」- 模板编码
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CODE</code>. 「code」- 模板编码
     */
    public IMTpl setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TYPE</code>. 「type」- 模板类型
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TYPE</code>. 「type」- 模板类型
     */
    public IMTpl setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_CATEGORY</code>. 「tplCategory」- 分类配置
     */
    public String getTplCategory();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_CATEGORY</code>. 「tplCategory」- 分类配置
     */
    public IMTpl setTplCategory(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_INTEGRATION</code>. 「tplIntegration」- 集成配置
     */
    public String getTplIntegration();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_INTEGRATION</code>. 「tplIntegration」- 集成配置
     */
    public IMTpl setTplIntegration(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ACL</code>. 「tplAcl」- 安全配置
     */
    public String getTplAcl();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ACL</code>. 「tplAcl」- 安全配置
     */
    public IMTpl setTplAcl(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ACL_VISIT</code>. 「tplAclVisit」- 资源访问者配置
     */
    public String getTplAclVisit();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ACL_VISIT</code>. 「tplAclVisit」- 资源访问者配置
     */
    public IMTpl setTplAclVisit(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_MODEL</code>. 「tplModel」- 模型配置
     */
    public String getTplModel();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_MODEL</code>. 「tplModel」- 模型配置
     */
    public IMTpl setTplModel(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_ENTITY</code>. 「tplEntity」- 实体配置
     */
    public String getTplEntity();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_ENTITY</code>. 「tplEntity」- 实体配置
     */
    public IMTpl setTplEntity(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_API</code>. 「tplApi」- 接口配置
     */
    public String getTplApi();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_API</code>. 「tplApi」- 接口配置
     */
    public IMTpl setTplApi(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_JOB</code>. 「tplJob」- 任务配置
     */
    public String getTplJob();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_JOB</code>. 「tplJob」- 任务配置
     */
    public IMTpl setTplJob(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI</code>. 「tplUi」- 界面配置
     */
    public String getTplUi();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI</code>. 「tplUi」- 界面配置
     */
    public IMTpl setTplUi(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI_LIST</code>. 「tplUiList」- 界面列表配置
     */
    public String getTplUiList();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI_LIST</code>. 「tplUiList」- 界面列表配置
     */
    public IMTpl setTplUiList(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.TPL_UI_FORM</code>. 「tplUiForm」- 界面表单配置
     */
    public String getTplUiForm();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.TPL_UI_FORM</code>. 「tplUiForm」- 界面表单配置
     */
    public IMTpl setTplUiForm(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.SIGMA</code>. 「sigma」- 统一标识
     */
    public IMTpl setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IMTpl setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.ACTIVE</code>. 「active」- 是否启用
     */
    public IMTpl setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IMTpl setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IMTpl setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IMTpl setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IMTpl setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.M_TPL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    /**
     * Setter for <code>DB_ETERNAL.M_TPL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IMTpl setUpdatedBy(String value);

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IMTpl
     */
    public void from(cn.vertxup.atom.domain.tables.interfaces.IMTpl from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IMTpl
     */
    public <E extends cn.vertxup.atom.domain.tables.interfaces.IMTpl> E into(E into);

    default IMTpl fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setName(json.getString("NAME"));
        setCode(json.getString("CODE"));
        setType(json.getString("TYPE"));
        setTplCategory(json.getString("TPL_CATEGORY"));
        setTplIntegration(json.getString("TPL_INTEGRATION"));
        setTplAcl(json.getString("TPL_ACL"));
        setTplAclVisit(json.getString("TPL_ACL_VISIT"));
        setTplModel(json.getString("TPL_MODEL"));
        setTplEntity(json.getString("TPL_ENTITY"));
        setTplApi(json.getString("TPL_API"));
        setTplJob(json.getString("TPL_JOB"));
        setTplUi(json.getString("TPL_UI"));
        setTplUiList(json.getString("TPL_UI_LIST"));
        setTplUiForm(json.getString("TPL_UI_FORM"));
        setSigma(json.getString("SIGMA"));
        setLanguage(json.getString("LANGUAGE"));
        setActive(json.getBoolean("ACTIVE"));
        setMetadata(json.getString("METADATA"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY", getKey());
        json.put("NAME", getName());
        json.put("CODE", getCode());
        json.put("TYPE", getType());
        json.put("TPL_CATEGORY", getTplCategory());
        json.put("TPL_INTEGRATION", getTplIntegration());
        json.put("TPL_ACL", getTplAcl());
        json.put("TPL_ACL_VISIT", getTplAclVisit());
        json.put("TPL_MODEL", getTplModel());
        json.put("TPL_ENTITY", getTplEntity());
        json.put("TPL_API", getTplApi());
        json.put("TPL_JOB", getTplJob());
        json.put("TPL_UI", getTplUi());
        json.put("TPL_UI_LIST", getTplUiList());
        json.put("TPL_UI_FORM", getTplUiForm());
        json.put("SIGMA", getSigma());
        json.put("LANGUAGE", getLanguage());
        json.put("ACTIVE", getActive());
        json.put("METADATA", getMetadata());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY", getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY", getUpdatedBy());
        return json;
    }

}
